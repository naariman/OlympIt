//
//  LessonsListRouter.swift
//  OlympIt
//
//  Created Nariman on 08.05.2024.
//  Copyright Â© 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Dastan Makhutov @mchutov
//

import UIKit

final class LessonsListRouter: LessonsListWireframeProtocol {
    
    weak var viewController: UIViewController?
    
    static func createModule(initialLessonType: InitialLessonType, type: LessonType, lessonId: String) -> UIViewController {
        // Change to get view from storyboard if not using progammatic UI
        let view = LessonsListViewController()
        let interactor = LessonsListInteractor()
        let router = LessonsListRouter()
        let presenter = LessonsListPresenter(interface: view, interactor: interactor, router: router, initialLessonType: initialLessonType, type: type, lessonId: lessonId)
        
        view.presenter = presenter
        interactor.presenter = presenter
        router.viewController = view
        
        return view
    }
    
    func openPdf(with url: URL) {
        let vc = PdfRouter.createModule(pdfUrl: url)
        viewController?.pushIfPossibleOrPresent(viewController: vc, animated: true, completion: nil)
    }
    
    func openList(lessonId: String, olympId: String) {
        let viewModel = OlympViewModel(lessonId: lessonId, olympId: olympId)
        let vc = OlympYearViewController(viewModel: viewModel)
        vc.completion = { [weak self] url in
            self?.openPdf(with: url)
        }
        viewController?.pushIfPossibleOrPresent(viewController: vc, animated: true, completion: nil)
    }
}
