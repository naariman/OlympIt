//
//  DashboardPresenter.swift
//  OlympIt
//
//  Created Nariman on 18.02.2024.
//  Copyright Â© 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Dastan Makhutov @mchutov
//

import UIKit

final class DashboardPresenter {
    weak private var view: DashboardViewProtocol?
    var interactor: DashboardInteractorProtocol?
    private let router: DashboardWireframeProtocol
    
    var examLessons: LessonsBaseList = [] {
        didSet {
            view?.reloadData()
        }
    }
    var olympLessons: LessonsBaseList = [] {
        didSet {
            view?.reloadData()
        }
    }
    var currentLessonType: LessonType = .olymp {
        didSet {
            switch currentLessonType {
            case .olymp:
                fetchOlymp()
            case .exam:
                fetchExam()
            }
        }
    }

    init(interface: DashboardViewProtocol, interactor: DashboardInteractorProtocol?, router: DashboardWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
}

extension DashboardPresenter: DashboardPresenterProtocol {
    func viewDidLoad() {
        fetchOlymp()
    }
    
    func didFetchLessons(with lessons: LessonsBaseList) {
        switch currentLessonType {
        case .exam:
            examLessons = lessons
        case .olymp:
            olympLessons = lessons
        }
    }
    
    func error(message: String) {
        view?.showAlert(message: message)
    }
}

private extension DashboardPresenter {
    func fetchExam() {
        examLessons.removeAll()
        interactor?.fetchLesson(with: .exam)
    }
    
    func fetchOlymp() {
        olympLessons.removeAll()
        interactor?.fetchLesson(with: .olymp)
    }
}
